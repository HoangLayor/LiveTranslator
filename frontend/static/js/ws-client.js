const socket = new WebSocket("ws://localhost:8000/ws");

// Bi·∫øn to√†n c·ª•c
let targetLanguage = 'vi'; 

socket.onopen = () => {
    console.log("‚úÖ K·∫øt n·ªëi th√†nh c√¥ng!");
    updateConnectionStatus("ƒê√£ k·∫øt n·ªëi");
};

socket.onmessage = async function(event) {
    try {
        const message = JSON.parse(event.data);
        if (message.type === "translation") {
            // Hi·ªÉn th·ªã k·∫øt qu·∫£ d·ªãch
            document.getElementById("translationResult").innerText = message.text;
        }
        else if (message.type === "error") {
            console.error("L·ªói t·ª´ server:", message.data);
            document.getElementById("translationResult").innerText = `[L·ªói] ${message.text}`;
        }
    } catch (err) {
        console.error("L·ªói x·ª≠ l√Ω tin nh·∫Øn:", err);
        document.getElementById("translationResult").innerText = event.text;
    }
};

socket.onclose = (event) => {
    console.log("üîå ƒê√≥ng k·∫øt n·ªëi, m√£:", event.code, "l√Ω do:", event.reason);
    updateConnectionStatus("M·∫•t k·∫øt n·ªëi", true);
    setTimeout(reconnectWebSocket, 3000);
};

socket.onerror = (error) => {
    console.error("L·ªói WebSocket:", error);
    updateConnectionStatus("L·ªói k·∫øt n·ªëi", true);
};

// H√†m k·∫øt n·ªëi l·∫°i
function reconnectWebSocket() {
    if (socket.readyState === WebSocket.CLOSED) {
        console.log("üîÑ ƒêang k·∫øt n·ªëi l·∫°i...");
        socket = new WebSocket("ws://localhost:8000/ws");
    }
}

// H√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i k·∫øt n·ªëi
function updateConnectionStatus(text, isError = false) {
    const statusElement = document.getElementById('connectionStatus');
    if (statusElement) {
        statusElement.textContent = text;
        statusElement.style.color = isError ? 'red' : 'green';
    }
}

// H√†m g·ª≠i vƒÉn b·∫£n c·∫ßn d·ªãch
window.sendText = function() {
    const text = document.getElementById("textInput").value.trim();
    if (!text) return;

    if (socket.readyState === WebSocket.OPEN) {
        const payload = {
            type: "translate",
            text: text,
            target_lang: targetLanguage
        };
        socket.send(JSON.stringify(payload));
        
        // Hi·ªÉn th·ªã tr·∫°ng th√°i ƒëang d·ªãch
        document.getElementById("translationResult").innerText = "ƒêang d·ªãch...";
    } else {
        console.warn("Kh√¥ng th·ªÉ g·ª≠i - WebSocket ch∆∞a k·∫øt n·ªëi");
        updateConnectionStatus("Kh√¥ng th·ªÉ g·ª≠i - ƒêang k·∫øt n·ªëi l·∫°i...", true);
        reconnectWebSocket();
    }
};

// H√†m thay ƒë·ªïi ng√¥n ng·ªØ ƒë√≠ch
window.changeLanguage = function(lang) {
    targetLanguage = lang;
    console.log(`ƒê√£ ch·ªçn ng√¥n ng·ªØ ƒë√≠ch: ${lang}`);
    document.getElementById("languageLabel").textContent = 
        `ƒêang d·ªãch sang: ${getLanguageName(lang)}`;
};

// Helper: L·∫•y t√™n ng√¥n ng·ªØ
function getLanguageName(code) {
    const languages = {
        'vi': 'Ti·∫øng Vi·ªát',
        'en': 'Ti·∫øng Anh',
        'fr': 'Ti·∫øng Ph√°p',
        'ja': 'Ti·∫øng Nh·∫≠t',
    };
    return languages[code] || code;
}